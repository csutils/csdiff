{
    "scan": {
        "analyzer-version-owasp-zap": "2.11.1"
    },
    "defects": [
        {
            "checker": "OWASP_ZAP_WARNING",
            "cwe": 89,
            "imp": 1,
            "tool": "owasp-zap",
            "key_event_idx": 1,
            "events": [
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "note",
                    "message": "dynamically analyzed on Wed, 10 Aug 2022 10:13:02",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "alert[40018]",
                    "message": "SQL Injection - SQLite",
                    "verbosity_level": 0
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "desc",
                    "message": "<p>SQL injection may be possible.</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "solution",
                    "message": "<p>Do not trust client side input, even if there is client side validation in place.  </p><p>In general, type check all data on the server side.</p><p>If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'</p><p>If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.</p><p>If database Stored Procedures can be used, use them.</p><p>Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!</p><p>Do not create dynamic SQL queries using simple string concatenation.</p><p>Escape all data received from the client.</p><p>Apply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.</p><p>Apply the principle of least privilege by using the least privileged database user possible.</p><p>In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.</p><p>Grant the minimum database access that is necessary for the application.</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "otherinfo",
                    "message": "<p>RDBMS [SQLite] likely, given error message regular expression [near \".+\": syntax error] matched by the HTML results.</p><p>The vulnerability was detected by manipulating the parameter to cause a database error message to be returned and recognised</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "reference",
                    "message": "<p>https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "method",
                    "message": "POST",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "param",
                    "message": "month",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "attack",
                    "message": ";",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "evidence",
                    "message": "near \";\": syntax error",
                    "verbosity_level": 1
                }
            ]
        },
        {
            "checker": "OWASP_ZAP_WARNING",
            "cwe": 97,
            "imp": 1,
            "tool": "owasp-zap",
            "key_event_idx": 1,
            "events": [
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "note",
                    "message": "dynamically analyzed on Wed, 10 Aug 2022 10:13:02",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "alert[40009]",
                    "message": "Server Side Include",
                    "verbosity_level": 0
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "desc",
                    "message": "<p>Certain parameters may cause Server Side Include commands to be executed.  This may allow database connection or arbitrary code to be executed.</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "solution",
                    "message": "<p>Do not trust client side input and enforce a tight check in the server side.  Disable server side includes.</p><p></p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "reference",
                    "message": "<p>http://www.carleton.ca/~dmcfet/html/ssi.html</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "method",
                    "message": "POST",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "param",
                    "message": "month",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "attack",
                    "message": "<!--#EXEC cmd=\"ls /\"-->",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "evidence",
                    "message": "root'\nHOSTNAME = 'dfd2f63e3bbf'\nHTTP_ACCEPT = '*/*'\nHTTP_CACHE_CONTROL = 'no-cache'\nHTTP_HOST = 'rhos-fedora-devel.usersys.redhat.com:9000'\nHTTP_PRAGMA = 'no-cache'\nHTTP_USER_AGENT = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0'\nPATH = '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr",
                    "verbosity_level": 1
                }
            ]
        },
        {
            "checker": "OWASP_ZAP_WARNING",
            "cwe": 693,
            "tool": "owasp-zap",
            "key_event_idx": 1,
            "events": [
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "note",
                    "message": "dynamically analyzed on Wed, 10 Aug 2022 10:13:02",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "alert[10021]",
                    "message": "X-Content-Type-Options Header Missing",
                    "verbosity_level": 0
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "desc",
                    "message": "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "solution",
                    "message": "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "otherinfo",
                    "message": "<p>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At \"High\" threshold this scan rule will not alert on client or server error responses.</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "reference",
                    "message": "<p>http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx</p><p>https://owasp.org/www-community/Security_Headers</p>",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "method",
                    "message": "POST",
                    "verbosity_level": 1
                },
                {
                    "file_name": "http://rhos-fedora-devel.usersys.redhat.com:9000/api/v1/activities/",
                    "line": 0,
                    "event": "param",
                    "message": "X-Content-Type-Options",
                    "verbosity_level": 1
                }
            ]
        }
    ]
}
