# Copyright (C) 2011 - 2020 Red Hat, Inc.
#
# This file is part of csdiff.
#
# csdiff is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# csdiff is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with csdiff.  If not, see <http://www.gnu.org/licenses/>.

# a generic template for csparser test-cases
macro(test_csparser dir num)
    set(tst "${CMAKE_CURRENT_SOURCE_DIR}/${dir}/${num}")

    set(cmd "${csgrep} ${tst}-stdin.txt 2>/dev/null")
    set(cmd "${cmd} | ${diffcmd} ${tst}-stdout.txt -")
    add_test_wrap("csgrep/${dir}-${num}-stdout" "${cmd}")

    set(cmd "${csgrep} ${tst}-stdin.txt 2>&1 >/dev/null")
    set(cmd "${cmd} | sed -s 's|^[^:]*/||' | ${diffcmd} ${tst}-stderr.txt -")
    add_test_wrap("csgrep/${dir}-${num}-stderr" "${cmd}")
endmacro()

# a generic template for csgrep test-cases
macro(test_csgrep num)
    set(tst "${CMAKE_CURRENT_SOURCE_DIR}/${num}")

    file(READ ${tst}-args.txt args)
    string(REPLACE "\n" "" args "${args}")
    set(cmd "${csgrep} ${args} ${tst}-stdin.txt")
    set(cmd "${cmd} | ${jsfilter} | ${diffcmd} ${tst}-stdout.txt -")
    add_test_wrap("csgrep/${num}" "${cmd}")
endmacro()

# csgrep tests
test_csparser(csparser-5.8                          00)
test_csparser(csparser-5.8                          01)
test_csparser(csparser-5.8                          02)
test_csgrep("0000-exclude-conftest"                   )
test_csgrep("0001-remove-duplicates"                  )
test_csgrep("0002-compiler-warnings"                  )
test_csgrep("0003-compiler-warnings"                  )
test_csgrep("0004-compiler-warnings"                  )
test_csgrep("0005-compiler-warnings"                  )
test_csgrep("0006-cppcheck-warnings"                  )
test_csgrep("0007-cppcheck-warnings"                  )
test_csgrep("0008-cppcheck-warnings"                  )
test_csgrep("0009-err-file-comments"                  )
test_csgrep("0010-err-file-comments"                  )
test_csgrep("0011-err-file-comments"                  )
test_csgrep("0012-llvm-build-warnings"                )
test_csgrep("0013-llvm-build-warnings"                )
test_csgrep("0014-llvm-build-warnings"                )
test_csgrep("0015-llvm-build-warnings"                )
test_csgrep("0016-compiler-warnings"                  )
test_csgrep("0017-compiler-warnings"                  )
test_csgrep("0018-compiler-warnings"                  )
test_csgrep("0019-clang-warnings"                     )
test_csgrep("0020-clang-warnings"                     )
test_csgrep("0021-compiler-warnings"                  )
test_csgrep("0022-compiler-warnings"                  )
test_csgrep("0023-clang-warnings"                     )
test_csgrep("0024-compiler-warnings"                  )
test_csgrep("0025-compiler-warnings"                  )
test_csgrep("0026-cov-format-errors"                  )
test_csgrep("0027-cov-format-errors"                  )
test_csgrep("0028-cov-format-errors"                  )
test_csgrep("0029-cov-format-errors"                  )
test_csgrep("0030-prospector-raw"                     )
test_csgrep("0031-prospector-err"                     )
test_csgrep("0032-shellcheck-raw"                     )
test_csgrep("0033-cov-format-errors"                  )
test_csgrep("0034-csgrep-color"                       )
test_csgrep("0035-cov-format-errors"                  )
test_csgrep("0036-csgrep-json"                        )
test_csgrep("0037-csgrep-json"                        )
test_csgrep("0038-csparser-remediation"               )
test_csgrep("0039-csparser-remediation"               )
test_csgrep("0040-csparser-code-snippet"              )
test_csgrep("0041-gcc-parser-pylint"                  )
test_csgrep("0042-gcc-parser-smatch"                  )
test_csgrep("0043-gcc-parser-smatch"                  )
test_csgrep("0044-csparser-new-key-evts"              )
test_csgrep("0045-gcc-parser-clang"                   )
test_csgrep("0046-cov-json-v2"                        )
test_csgrep("0047-csparser-new-key-evts"              )
test_csgrep("0048-csparser-missing-break-key-evt"     )
test_csgrep("0049-csparser-findbugs-jsr166"           )
test_csgrep("0050-gcc-parser-gcc-9.2.1"               )
test_csgrep("0051-gcc-parser-systemd"                 )
test_csgrep("0052-gcc-parser-clang-nss"               )
test_csgrep("0053-csparser-note-events"               )
test_csgrep("0054-csparser-unknown-lineno"            )
test_csgrep("0055-csparser-pylint-copr"               )
test_csgrep("0056-gcc-sparser-clang-error"            )
test_csgrep("0057-gcc-parser-gcc-analyzer-curl"       )
test_csgrep("0058-csparser-gcc-analyzer-curl"         )
test_csgrep("0059-json-parser-cov-v7-cwe"             )
test_csgrep("0060-gcc-parser-cppcheck-cwe"            )
test_csgrep("0061-json-parser-cov-v7-lang"            )
test_csgrep("0062-csparser-checker-lang"              )
test_csgrep("0063-gcc-parser-checker-lang"            )
test_csgrep("0064-json-parser-unknown-node"           )
test_csgrep("0065-gcc-parser-clang-warn-suff"         )
test_csgrep("0066-json-parser-valgrind-dedup"         )
test_csgrep("0067-json-parser-valgrind-dedup"         )
test_csgrep("0068-gcc-parser-cppcheck-iterator1"      )
test_csgrep("0069-csfilter-python-build-path"         )
test_csgrep("0070-csparser-included-from-note"        )
test_csgrep("0071-csgrep-drop-scan-props"             )
test_csgrep("0072-abstract-parser-gcc-builtin"        )
test_csgrep("0073-coverity-misra-checkers"            )
test_csgrep("0074-coverity-leading-space"             )
test_csgrep("0075-coverity-from-cshtml"               )
test_csgrep("0076-filter-file-basic"                  )
test_csgrep("0077-filter-file-checker-regex"          )
test_csgrep("0078-json-parser-snyk-code"              )
test_csgrep("0079-csparser-symbiotic"                 )
test_csgrep("0080-sarif-writer"                       )
test_csgrep("0081-sarif-writer"                       )
test_csgrep("0082-sarif-parser"                       )
test_csgrep("0083-sarif-parser"                       )
test_csgrep("0084-sarif-parser"                       )
test_csgrep("0085-sarif-writer"                       )
test_csgrep("0086-sarif-parser"                       )
test_csgrep("0087-json-writer-empty"                  )
test_csgrep("0088-csparser-cert-c"                    )
test_csgrep("0089-json-writer-illegal-utf8-sequence"  )
test_csgrep("0090-sarif-writer-illegal-utf8-sequence" )
test_csgrep("0091-csdiff-json-tool-attr"              )
test_csgrep("0092-csgrep-tool-predicate"              )
test_csgrep("0093-csgrep-tool-predicate"              )
test_csgrep("0094-gcc-json"                           )
test_csgrep("0095-gcc-sarif"                          )
test_csgrep("0096-sarif-levels"                       )
test_csgrep("0097-sarif-set-tool"                     )
test_csgrep("0098-json-parser-shellcheck"             )
test_csgrep("0099-csparser-his-metrics"               )
test_csgrep("0100-sarif-parser-gitleaks"              )
test_csgrep("0101-json-parser-empty"                  )
test_csgrep("0102-xml-parser-empty"                   )
test_csgrep("0103-json-parser-zap"                    )
test_csgrep("0104-cov-parser-zap"                     )
test_csgrep("0105-json-parser-zap"                    )
test_csgrep("0106-snyk-prepend-path"                  )
test_csgrep("0107-gcc-prepend-path"                   )
test_csgrep("0108-sarif-empty-results"                )
test_csgrep("0109-shellcheck-sarif-cwe"               )
test_csgrep("0110-warning-rate-limit"                 )
test_csgrep("0111-gcc-parser-ubsan-simple"            )
test_csgrep("0112-gcc-parser-ubsan-bt"                )
test_csgrep("0113-gitleaks-limit-msg-len"             )
test_csgrep("0114-json-sc-column"                     )
test_csgrep("0115-csgrep-imp-filter"                  )
test_csgrep("0116-csgrep-warning-rate-limit"          )
test_csgrep("0117-csgrep-set-imp-level"               )
test_csgrep("0118-gcc-parser-ubsan-dedup"             )
test_csgrep("0119-cov-parser-sigma"                   )
test_csgrep("0120-sarif-parser-semgrep"               )
test_csgrep("0121-cov-parser-lock-evasion"            )
test_csgrep("0122-json-parser-cov-v10-column"         )
test_csgrep("0124-sarif-writer-imp"                   )
