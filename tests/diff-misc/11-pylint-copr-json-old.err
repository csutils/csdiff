{
  "defects": [
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 13,
          "column": 15,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required before assignment\nversion_files  = os.path.join(\n               ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 29,
          "column": 1,
          "event": "W1401(anomalous-backslash-in-string)",
          "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 29,
          "column": 6,
          "event": "W1401(anomalous-backslash-in-string)",
          "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 29,
          "column": 10,
          "event": "W1401(anomalous-backslash-in-string)",
          "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 29,
          "column": 27,
          "event": "W1401(anomalous-backslash-in-string)",
          "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 1,
          "column": 0,
          "event": "C0103(invalid-name)",
          "message": "Module name \"check-alembic-revisions\" doesn't conform to '(copr-[a-z-]*|[0-9a-f]{12}_[a-z_]+|[a-z_][a-z0-9_]{2,30})$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 51,
          "column": 0,
          "event": "C0116(missing-function-docstring)",
          "message": "print_revision: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "build_aux/check-alembic-revisions",
          "line": 7,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused run_path imported from runpy"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 17,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sys\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 18,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import os\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 23,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from coprs import db\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 3,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"from logging.config import fileConfig\" should be placed before \"from alembic import context\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 17,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import sys\" should be placed before \"from alembic import context\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/env.py",
          "line": 18,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import os\" should be placed before \"from alembic import context\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/10029c92dd0d_add_with_without_columns_for_copr_chroot.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/10029c92dd0d_add_with_without_columns_for_copr_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/10029c92dd0d_add_with_without_columns_for_copr_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/12abab545d7a_added_index_for_main_in_copr_dir.py",
          "line": 9,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/1f94b22f70a1_change_module_version_to_bigint.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/1f94b22f70a1_change_module_version_to_bigint.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/1f94b22f70a1_change_module_version_to_bigint.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/227f6bf8f10b_add_build_requires_to_build_chroot.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/227f6bf8f10b_add_build_requires_to_build_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/227f6bf8f10b_add_build_requires_to_build_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/24e9054d4155_fix_results_paths.py",
          "line": 24,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (130/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/24e9054d4155_fix_results_paths.py",
          "line": 36,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (144/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/24e9054d4155_fix_results_paths.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/24e9054d4155_fix_results_paths.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/24e9054d4155_fix_results_paths.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 18,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 19,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.Column('name', sa.String(length=50), nullable=False),\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.Column('clone_url', sa.String(length=100), nullable=False),\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 21,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.Column('clone_package_uri', sa.String(length=100), nullable=False),\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.Column('priority', sa.Integer(), nullable=False),\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.PrimaryKeyConstraint('id'),\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n    sa.UniqueConstraint('name')\n    ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2561c13a3556_add_dist_git_instance_table.py",
          "line": 25,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^                          ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/26bf5b9a4dd0_indeces_for_faster_build_selection.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 19,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('mail', sa.String(length=150), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('timezone', sa.String(length=50), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 21,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('api_login', sa.String(length=40), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('api_token', sa.String(length=40), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('api_token_expiration', sa.Date(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('user_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 25,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 26,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('user_id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 27,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 29,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('webhook_secret', sa.String(length=100), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 30,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('scm_api_auth_json', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 31,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 32,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 33,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('copr_id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 34,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/29c352bde564_separate_private_stuff_into_private_.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2d8b4722918b_remove_unused_module_md_name_and_module_.py",
          "line": 22,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (121/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2d8b4722918b_remove_unused_module_md_name_and_module_.py",
          "line": 11,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"from sqlalchemy.dialects import postgresql\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2db1d0557b06_fill_ended_on_column_in_action_table.py",
          "line": 23,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/2db1d0557b06_fill_ended_on_column_in_action_table.py",
          "line": 9,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3576fc77fb31_added_source_status_to_build.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3576fc77fb31_added_source_status_to_build.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3576fc77fb31_added_source_status_to_build.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3637b9daf7e4_generate_main_copr_dirs.py",
          "line": 29,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (171/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3637b9daf7e4_generate_main_copr_dirs.py",
          "line": 30,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (167/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3637b9daf7e4_generate_main_copr_dirs.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3637b9daf7e4_generate_main_copr_dirs.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3637b9daf7e4_generate_main_copr_dirs.py",
          "line": 34,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3637b9daf7e4_generate_main_copr_dirs.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/38ea34def9a_add_proxy_column_to_user_table.py",
          "line": 1,
          "column": 0,
          "event": "C0103(invalid-name)",
          "message": "Module name \"38ea34def9a_add_proxy_column_to_user_table\" doesn't conform to '(copr-[a-z-]*|[0-9a-f]{12}_[a-z_]+|[a-z_][a-z0-9_]{2,30})$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/38ea34def9a_add_proxy_column_to_user_table.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/38ea34def9a_add_proxy_column_to_user_table.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/38ea34def9a_add_proxy_column_to_user_table.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3b0851cb25fc_add_build_to_module_relation.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3b0851cb25fc_add_build_to_module_relation.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3b0851cb25fc_add_build_to_module_relation.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3b67c52f5277_add_repos_to_copr_chroot.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3b67c52f5277_add_repos_to_copr_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3b67c52f5277_add_repos_to_copr_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3cba3ffe2836_on_delete_cascade_for_table_build.py",
          "line": 19,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (122/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3cba3ffe2836_on_delete_cascade_for_table_build.py",
          "line": 9,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3d89a66848c5_follow_fedora_branching.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3d89a66848c5_follow_fedora_branching.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/3d89a66848c5_follow_fedora_branching.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/465202bfb9ce_update_db_functions.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/465202bfb9ce_update_db_functions.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/465202bfb9ce_update_db_functions.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/4af9d157c4ea_add_unique_constraint_for_mock_chroots.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/4edb1ca2a13f_remove_priority_columns.py",
          "line": 23,
          "column": 91,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required after comma\n    op.add_column('build_chroot', sa.Column('priority', sa.BigInteger(), server_default='0',nullable=False))\n                                                                                           ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/4edb1ca2a13f_remove_priority_columns.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/4edb1ca2a13f_remove_priority_columns.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/4edb1ca2a13f_remove_priority_columns.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            \"SELECT * FROM package WHERE source_type=:param\",\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            {\"param\": 3})\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 42,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            \"SELECT * FROM package WHERE source_type=:param\",\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 43,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            {\"param\": 4})\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 62,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            \"SELECT * FROM package WHERE source_type=:param\",\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 63,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            {\"param\": 7})\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 15,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import json\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 83,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/512ff2b9eb6c_unify_scm_source_types_for_packages.py",
          "line": 15,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import json\" should be placed before \"import sqlalchemy as sa\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/51716ab39d37_package_chroot_blacklist.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/51716ab39d37_package_chroot_blacklist.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/51716ab39d37_package_chroot_blacklist.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 31,
          "column": 0,
          "event": "R1707(trailing-comma-tuple)",
          "message": "Disallow trailing comma tuple"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 32,
          "column": 0,
          "event": "R1707(trailing-comma-tuple)",
          "message": "Disallow trailing comma tuple"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 19,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('id', sa.Integer(), nullable=False),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.PrimaryKeyConstraint('id'),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('copr_id', sa.Integer(), nullable=True),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('user_id', sa.Integer(), nullable=True),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('group_id', sa.Integer(), nullable=True),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 25,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('position', sa.Integer(), nullable=False),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 27,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 28,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 29,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 30,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 31,
          "column": 4,
          "event": "W0106(expression-not-assigned)",
          "message": "upgrade: Expression \"(op.create_index(op.f('ix_pinned_coprs_user_id'), 'pinned_coprs', ['user_id'], unique=False), )\" is assigned to nothing"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/55a07cb7bd68_add_table_for_pinnedcoprs.py",
          "line": 32,
          "column": 4,
          "event": "W0106(expression-not-assigned)",
          "message": "upgrade: Expression \"(op.create_index(op.f('ix_pinned_coprs_group_id'), 'pinned_coprs', ['group_id'], unique=False), )\" is assigned to nothing"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/669ba46bf357_add_srpm_url_to_build_table.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/669ba46bf357_add_srpm_url_to_build_table.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/669ba46bf357_add_srpm_url_to_build_table.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/69c5f19841a5_add_delete_after_and_delete_notify_.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/69c5f19841a5_add_delete_after_and_delete_notify_.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/69c5f19841a5_add_delete_after_and_delete_notify_.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/6fed8655d074_remove_build_results_column.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/6fed8655d074_remove_build_results_column.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/6fed8655d074_remove_build_results_column.py",
          "line": 22,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/6fed8655d074_remove_build_results_column.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7723d580c625_copy_private_data_to_private_tables.py",
          "line": 22,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (121/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7723d580c625_copy_private_data_to_private_tables.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7723d580c625_copy_private_data_to_private_tables.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7723d580c625_copy_private_data_to_private_tables.py",
          "line": 26,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7723d580c625_copy_private_data_to_private_tables.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7bb0c7762df0_make_new_prio_columns.py",
          "line": 19,
          "column": 91,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required after comma\n    op.add_column('build_chroot', sa.Column('priority', sa.BigInteger(), server_default='0',nullable=False))\n                                                                                           ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7bb0c7762df0_make_new_prio_columns.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7bb0c7762df0_make_new_prio_columns.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/7bb0c7762df0_make_new_prio_columns.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/878d9d5311b7_add_use_bootstrap_container_to_copr.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/878d9d5311b7_add_use_bootstrap_container_to_copr.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/878d9d5311b7_add_use_bootstrap_container_to_copr.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 21,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('name', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('main', sa.Boolean(), server_default='0', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 25,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id'),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 26,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.UniqueConstraint('copr_id', 'name', name='copr_dir_copr_id_name_uniq')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 27,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 30,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (133/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/887cbbd6575e_scm_integration.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8ae65946df53_add_blocked_by_column_for_batch.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8ae65946df53_add_blocked_by_column_for_batch.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8ae65946df53_add_blocked_by_column_for_batch.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8bf844cc7135_add_index_for_delete_after_a_delete_.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8bf844cc7135_add_index_for_delete_after_a_delete_.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8bf844cc7135_add_index_for_delete_after_a_delete_.py",
          "line": 14,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/8bf844cc7135_add_index_for_delete_after_a_delete_.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            \"SELECT * FROM build WHERE source_type=:param\",\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            {\"param\": 3})\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 42,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            \"SELECT * FROM build WHERE source_type=:param\",\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 43,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            {\"param\": 4})\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 62,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            \"SELECT * FROM build WHERE source_type=:param\",\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 63,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n            {\"param\": 7})\n        |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 15,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import json\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 83,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8654abcec65_unify_scm_source_types.py",
          "line": 15,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import json\" should be placed before \"import sqlalchemy as sa\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/a8ef299dcac8_add_indexes_to_actions.py",
          "line": 9,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/ac5917e5c4fe_make_copr_dirs_unique_by_ownername.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/ac5917e5c4fe_make_copr_dirs_unique_by_ownername.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/ac5917e5c4fe_make_copr_dirs_unique_by_ownername.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('time', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 21,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('stat_type', sa.Text(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('running', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('pending', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('time', 'stat_type')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 25,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/acac8d3ae868_add_table_for_graph_statistics.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b64659389c54_add_column_final_prunerepo_done_to_mock_.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b64659389c54_add_column_final_prunerepo_done_to_mock_.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b64659389c54_add_column_final_prunerepo_done_to_mock_.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b8a8a1345ed9_remove_now_private_columns_from_user_and_copr.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b8a8a1345ed9_remove_now_private_columns_from_user_and_copr.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b8a8a1345ed9_remove_now_private_columns_from_user_and_copr.py",
          "line": 14,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/b8a8a1345ed9_remove_now_private_columns_from_user_and_copr.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 30,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('name', sa.String(length=50), nullable=False),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 31,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.PrimaryKeyConstraint('name')\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 32,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 49,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 5 spaces).\n               existing_type=sa.VARCHAR(length=50),\n               ^    |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 50,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 5 spaces).\n               nullable=False)\n               ^    |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 16,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from sqlalchemy.orm import sessionmaker\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 18,
          "column": 0,
          "event": "C0410(multiple-imports)",
          "message": "Multiple imports on one line (sys, os)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 18,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sys, os\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 18,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sys, os\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 20,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from coprs.models import MockChroot\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 21,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from coprs.helpers import chroot_to_branch\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 22,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from coprs.logic.coprs_logic import BranchesLogic\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 26,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "upgrade: Variable name \"Session\" doesn't conform to '[a-z_][a-zA-Z0-9_]{,30}$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 16,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"from sqlalchemy.orm import sessionmaker\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 18,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import sys, os\" should be placed before \"import sqlalchemy as sa\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/bf4b5dc74740_map_mock_croots_to_dits_git_branch.py",
          "line": 18,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import sys, os\" should be placed before \"import sqlalchemy as sa\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/c28451aaed50_fix_defaults.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/ca76b7902c2f_remove_old_status_column.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/ca76b7902c2f_remove_old_status_column.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/ca76b7902c2f_remove_old_status_column.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 19,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.Column('id', sa.Integer(), nullable=False),\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n        sa.PrimaryKeyConstraint('id')\n        ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 21,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 10 spaces).\n        sa.Column('batch_id', sa.Integer(), sa.ForeignKey('batch.id'), nullable=True)\n        ^         |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^            ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cab566cc7dfb_add_batch_build_table.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 18,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('time', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 19,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('stat_type', sa.Text(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 20,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('waiting', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 21,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('success', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 22,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('failed', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 23,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('time', 'stat_type')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/cb928c34d36c_add_actionsstatistics_table.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/code4beaf000_add_indexes3.py",
          "line": 17,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (149/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/code4beaf000_add_indexes3.py",
          "line": 12,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/code4beaf000_add_indexes3.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/code4beaf000_add_indexes3.py",
          "line": 13,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/code4beaf000_add_indexes3.py",
          "line": 13,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 24,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 25,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('action_type', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 26,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('object_type', sa.String(length=20), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 27,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('object_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 28,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('old_value', sa.String(length=255), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 29,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('new_value', sa.String(length=255), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 30,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('data', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 31,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('result', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 32,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('message', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 33,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('created_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 34,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('ended_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 35,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 36,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 38,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('name', sa.String(length=127), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 39,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('counter_type', sa.String(length=30), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 40,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('counter', sa.Integer(), server_default='0', nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 41,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('name')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 42,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 44,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 45,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('name', sa.String(length=127), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 46,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('fas_name', sa.String(length=127), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 47,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 48,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 50,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 51,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('os_release', sa.String(length=50), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 52,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('os_version', sa.String(length=50), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 53,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('arch', sa.String(length=50), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 54,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('is_active', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 55,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 56,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 58,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 59,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('username', sa.String(length=100), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 60,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('mail', sa.String(length=150), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 61,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('timezone', sa.String(length=50), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 62,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('proven', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 63,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('admin', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 64,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('api_login', sa.String(length=40), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 65,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('api_token', sa.String(length=40), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 66,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('api_token_expiration', sa.Date(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 67,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('openid_groups', coprs.helpers.JSONEncodedDict(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 68,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id'),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 69,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.UniqueConstraint('username')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 70,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 72,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 73,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('name', sa.String(length=100), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 74,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('homepage', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 75,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('contact', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 76,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('repos', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 77,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('created_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 78,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('description', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 79,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('instructions', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 80,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('deleted', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 81,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('playground', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 82,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('auto_createrepo', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 83,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('user_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 84,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('group_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 85,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('forked_from_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 86,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('webhook_secret', sa.String(length=100), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 87,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('build_enable_net', sa.Boolean(), server_default='1', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 88,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('unlisted_on_hp', sa.Boolean(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 89,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('latest_indexed_data_update', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 90,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('persistent', sa.Boolean(), server_default='0', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 91,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('auto_prune', sa.Boolean(), server_default='1', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 92,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['forked_from_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 93,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 94,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 95,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 96,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 98,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('user_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 99,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('config_name', sa.String(length=30), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 100,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('primary', sa.String(length=80), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 101,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 102,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('config_name', 'primary')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 103,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 105,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('buildroot_pkgs', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 106,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('mock_chroot_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 107,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 108,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('comps_zlib', sa.LargeBinary(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 109,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('comps_name', sa.String(length=127), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 110,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('module_md_zlib', sa.LargeBinary(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 111,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('module_md_name', sa.String(length=127), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 112,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 113,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['mock_chroot_id'], ['mock_chroot.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 114,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('mock_chroot_id', 'copr_id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 115,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 117,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_builder', sa.SmallInteger(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 118,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_admin', sa.SmallInteger(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 119,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('user_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 120,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 121,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 122,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 123,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('user_id', 'copr_id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 124,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 126,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 127,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('raise_message', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 128,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('raised_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 129,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('resolved_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 130,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 131,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('reporter_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 132,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('resolver_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 133,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 134,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['reporter_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 135,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['resolver_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 136,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 137,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 139,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer, primary_key=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 140,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('name', sa.String(100), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 141,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('stream', sa.String(100), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 142,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('version', sa.BigInteger, nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 143,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('summary', sa.String(100), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 144,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('description', sa.Text),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 145,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('created_on', sa.Integer, nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 146,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('yaml_b64', sa.Text),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 147,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer, sa.ForeignKey('copr.id')),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 148,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 150,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 151,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('name', sa.String(length=100), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 152,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('source_type', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 153,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('source_json', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 154,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('webhook_rebuild', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 155,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('enable_net', sa.Boolean(), server_default='0', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 156,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('old_status', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 157,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 158,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 159,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id'),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 160,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.UniqueConstraint('copr_id', 'name', name='packages_copr_pkgname')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 161,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 163,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 164,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('pkgs', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 165,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('built_packages', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 166,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('pkg_version', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 167,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('canceled', sa.Boolean(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 168,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('repos', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 169,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('submitted_on', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 170,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('results', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 171,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('memory_reqs', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 172,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('timeout', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 173,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('enable_net', sa.Boolean(), server_default='0', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 174,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('source_type', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 175,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('source_json', sa.Text(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 176,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('fail_type', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 177,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('is_background', sa.Boolean(), server_default='0', nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 178,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('user_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 179,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('copr_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 180,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('package_id', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 181,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 182,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 183,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 184,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 185,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 188,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('mock_chroot_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 189,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('build_id', sa.Integer(), nullable=False),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 190,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('git_hash', sa.String(length=40), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 191,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('status', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 192,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('started_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 193,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('ended_on', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 194,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.Column('last_deferred', sa.Integer(), nullable=True),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 195,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['build_id'], ['build.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 196,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.ForeignKeyConstraint(['mock_chroot_id'], ['mock_chroot.id'], ),\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 197,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 16 spaces).\n    sa.PrimaryKeyConstraint('mock_chroot_id', 'build_id')\n    ^               |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 198,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n    )\n    ^              ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 16,
          "column": 0,
          "event": "C0410(multiple-imports)",
          "message": "Multiple imports on one line (sys, os)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 16,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sys, os\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 16,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sys, os\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 18,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import coprs\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 204,
          "column": 4,
          "event": "W0107(unnecessary-pass)",
          "message": "downgrade: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 16,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import sys, os\" should be placed before \"import sqlalchemy as sa\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/dabab11132c1_initial_db_setup.py",
          "line": 16,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import sys, os\" should be placed before \"import sqlalchemy as sa\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deadbeafc0de_add_indexes2.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deadbeafc0de_add_indexes2.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deadbeafc0de_add_indexes2.py",
          "line": 14,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deadbeafc0de_add_indexes2.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deaddeadc0de_add_indexes.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deaddeadc0de_add_indexes.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import sqlalchemy as sa\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deaddeadc0de_add_indexes.py",
          "line": 14,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused sqlalchemy imported as sa"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/deaddeadc0de_add_indexes.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import sqlalchemy as sa\" should be placed before \"from alembic import op\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/e183e12563ee_add_index_to_module_id.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/f61a5c930abf_unique_constraint_on_modules.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/alembic/versions/fdec9947f8a1_add_web_hook_source_type_index.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from alembic import op\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 35,
          "column": 0,
          "event": "C0116(missing-function-docstring)",
          "message": "rawhide_to_release_function: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 51,
          "column": 16,
          "event": "C0121(singleton-comparison)",
          "message": "rawhide_to_release_function: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 87,
          "column": 11,
          "event": "C1801(len-as-condition)",
          "message": "rawhide_to_release_function: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 115,
          "column": 11,
          "event": "C1801(len-as-condition)",
          "message": "rawhide_to_release_function: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 120,
          "column": 0,
          "event": "C0116(missing-function-docstring)",
          "message": "turn_on_the_chroot_for_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 8,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused builds_logic imported from coprs.logic"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/commands/rawhide_to_release.py",
          "line": 8,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused packages_logic imported from coprs.logic"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 15,
          "column": 32,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required after comma\nfrom sqlalchemy.sql import false,true\n                                ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 88,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 8 spaces).\n            .join(models.Build)\n            ^       |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 89,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 8 spaces).\n            .group_by(*group_by_args)\n            ^       |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 90,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 8 spaces).\n            .having(func.count() == func.count(models.BuildChroot.ended_on))\n            ^       |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 91,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 8 spaces).\n            .having(models.Build.submitted_on &gt; time.time() - 3600*24*period_days)\n            ^       |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 92,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation.\n        )\n        ^          ||"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 244,
          "column": 21,
          "event": "C0326(bad-whitespace)",
          "message": "No space allowed around keyword argument assignment\n                time = time,\n                     ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 245,
          "column": 26,
          "event": "C0326(bad-whitespace)",
          "message": "No space allowed around keyword argument assignment\n                stat_type = type,\n                          ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 246,
          "column": 24,
          "event": "C0326(bad-whitespace)",
          "message": "No space allowed around keyword argument assignment\n                running = running,\n                        ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 247,
          "column": 24,
          "event": "C0326(bad-whitespace)",
          "message": "No space allowed around keyword argument assignment\n                pending = pending\n                        ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 270,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 1 space).\n                .filter(models.Build.canceled == false())\n                ^|"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 271,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 1 space).\n                .filter(models.Build.source_status == StatusEnum(\"pending\"))\n                ^|"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 272,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 1 space).\n                .order_by(models.Build.is_background.asc(), models.Build.id.asc()))\n                ^|"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 280,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (remove 3 spaces).\n                    .outerjoin(models.Build)\n                 |  ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 281,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (remove 3 spaces).\n                    .outerjoin(models.CoprDir)\n                 |  ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 282,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (remove 3 spaces).\n                    .outerjoin(models.Package, models.Package.id == models.Build.package_id)\n                 |  ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 283,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (remove 3 spaces).\n                    .options(joinedload('build').joinedload('copr_dir'),\n                 |  ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 285,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 1 space).\n                .filter(models.Build.canceled == false())\n                ^|"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 286,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 1 space).\n                .filter(or_(\n                ^|"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 294,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 1 space).\n                .order_by(models.Build.is_background.asc(), models.Build.id.asc()))\n                ^|"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 333,
          "column": 62,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n        query = models.Build.query.filter(models.Build.copr_id==copr.id)\n                                                              ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 338,
          "column": 53,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n        query = query.filter(models.Build.copr_dir_id==copr_dir.id)\n                                                     ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 422,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (125/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 443,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (125/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 457,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (125/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 586,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (remove 11 spaces).\n                                                        \"with bad characters. Forgot to split?\")\n                                             |          ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 700,
          "column": 47,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n            .filter(models.BuildChroot.build_id==build_id)\n                                               ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 701,
          "column": 57,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n            .filter(models.MockChroot.distgit_branch_name==branch)\n                                                         ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 775,
          "column": 29,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around assignment\n                chroot_status=StatusEnum(\"waiting\")\n                             ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1025,
          "column": 56,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n            .join(models.Build, models.Build.copr_dir_id==models.CoprDir.id)\n                                                        ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1038,
          "column": 44,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                    models.Build.copr_dir_id==dir_id,\n                                            ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1039,
          "column": 43,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                    models.Build.package_id==package_id)\n                                           ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1,
          "column": 0,
          "event": "C0302(too-many-lines)",
          "message": "Too many lines in module (1152/1000)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 40,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "BuildsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 40,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "BuildsLogic: Class 'BuildsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 42,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 71,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_recent_task_ids: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 102,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_recent_tasks: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 108,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_running_tasks_by_time: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 117,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_chroot_histogram: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 139,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_pending_jobs_bucket: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 158,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_running_jobs_bucket: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 173,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_cached_graph_data: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 191,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_task_graph_data: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 191,
          "column": 33,
          "event": "W0622(redefined-builtin)",
          "message": "BuildsLogic.get_task_graph_data: Redefining built-in 'type'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 219,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_small_graph_data: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 219,
          "column": 34,
          "event": "W0622(redefined-builtin)",
          "message": "BuildsLogic.get_small_graph_data: Redefining built-in 'type'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 235,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.cache_graph_data: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 235,
          "column": 30,
          "event": "W0622(redefined-builtin)",
          "message": "BuildsLogic.cache_graph_data: Redefining built-in 'type'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 235,
          "column": 36,
          "event": "W0621(redefined-outer-name)",
          "message": "BuildsLogic.cache_graph_data: Redefining name 'time' from outer scope (line 6)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 268,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_pending_srpm_build_tasks: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 278,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_pending_build_tasks: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 300,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_build_task: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 310,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_srpm_build_task: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 314,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_multiple: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 332,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_copr_builds_list: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 343,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.join_group: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 347,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_multiple_by_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 356,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_by_ids: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 360,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.get_by_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 364,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.create_new_from_other_build: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 404,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "BuildsLogic.create_new_from_scm: Too many arguments (11/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 520,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "BuildsLogic.create_new: Too many arguments (13/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 566,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.add: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 566,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "BuildsLogic.add: Too many arguments (16/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 566,
          "column": 4,
          "event": "R0914(too-many-locals)",
          "message": "BuildsLogic.add: Too many local variables (23/20)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 643,
          "column": 4,
          "event": "W0102(dangerous-default-value)",
          "message": "BuildsLogic.rebuild_package: Dangerous default value {} as argument"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 643,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.rebuild_package: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 718,
          "column": 12,
          "event": "W0702(bare-except)",
          "message": "BuildsLogic.delete_local_source: No exception type(s) specified"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 758,
          "column": 20,
          "event": "E1101(no-member)",
          "message": "BuildsLogic.update_state_from_dict: Method 'logger' has no 'exception' member"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 723,
          "column": 4,
          "event": "R0912(too-many-branches)",
          "message": "BuildsLogic.update_state_from_dict: Too many branches (21/12)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 723,
          "column": 4,
          "event": "R0915(too-many-statements)",
          "message": "BuildsLogic.update_state_from_dict: Too many statements (52/50)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 836,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.process_update_callback: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 841,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "BuildsLogic.process_update_callback: Unnecessary \"elif\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 836,
          "column": 4,
          "event": "R1710(inconsistent-return-statements)",
          "message": "BuildsLogic.process_update_callback: Either all return statements in a function should return an expression, or none of them should."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 852,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.pagure_flag: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 896,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.cancel_build: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 996,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "BuildsLogic.last_modified: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1002,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.filter_is_finished: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1005,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "BuildsLogic.filter_is_finished: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1011,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.filter_by_group_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1015,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.filter_by_package_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1019,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.clean_old_builds: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1053,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsLogic.delete_orphaned_builds: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1056,
          "column": 20,
          "event": "C0121(singleton-comparison)",
          "message": "BuildsLogic.delete_orphaned_builds: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 40,
          "column": 0,
          "event": "R0904(too-many-public-methods)",
          "message": "BuildsLogic: Too many public methods (52/20)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1070,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "BuildChrootsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1070,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "BuildChrootsLogic: Class 'BuildChrootsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1072,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.get_by_build_id_and_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1082,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.get_multiply: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1094,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.filter_by_build_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1098,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.filter_by_project_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1102,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.filter_by_project_user_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1106,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.filter_by_state: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1110,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChrootsLogic.filter_by_group_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1114,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "BuildsMonitorLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1114,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "BuildsMonitorLogic: Class 'BuildsMonitorLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 1116,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildsMonitorLogic.get_monitor_data: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 10,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused not_ imported from sqlalchemy.sql.expression"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 17,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused bindparam imported from sqlalchemy"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 17,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused Integer imported from sqlalchemy"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 17,
          "column": 0,
          "event": "W0611(unused-import)",
          "message": "Unused String imported from sqlalchemy"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 34,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs.logic.packages_logic import PackagesLogic\" should be placed before \"from .coprs_logic import MockChrootsLogic\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/builds_logic.py",
          "line": 17,
          "column": 0,
          "event": "C0412(ungrouped-imports)",
          "message": "Imports from package sqlalchemy are not grouped"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 75,
          "column": 0,
          "event": "W0311(bad-indentation)",
          "message": "Bad indentation. Found 15 spaces, expected 16"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 131,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 8 spaces).\n                        .format(group_name, copr_name))\n                |       ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 144,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 8 spaces).\n                        .format(user_name, copr_name))\n                |       ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 170,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 9 spaces).\n                        .format(ownername, copr_dirname))\n                        ^        |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 179,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 8 spaces).\n                        .format(copr_id))\n                |       ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 252,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 8 spaces).\n                    CoprsLogic.get_multiple_owned_by_username(\n            |       ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 310,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (127/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 317,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (126/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 325,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (139/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 24,
          "column": 0,
          "event": "C0116(missing-function-docstring)",
          "message": "unpin_projects_on_delete: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 24,
          "column": 44,
          "event": "W0613(unused-argument)",
          "message": "unpin_projects_on_delete: Unused argument 'oldvalue'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 24,
          "column": 54,
          "event": "W0613(unused-argument)",
          "message": "unpin_projects_on_delete: Unused argument 'event'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 30,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "ComplexLogic: Class 'ComplexLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 65,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.delete_expired_projects: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 82,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.fork_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 123,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_group_copr_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 147,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_copr_by_owner_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 153,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_copr_by_repo_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 159,
          "column": 8,
          "event": "W0702(bare-except)",
          "message": "ComplexLogic.get_copr_by_repo_safe: No exception type(s) specified"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 165,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_copr_dir_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 165,
          "column": 0,
          "event": "W0613(unused-argument)",
          "message": "ComplexLogic.get_copr_dir_safe: Unused argument 'kwargs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 173,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_copr_by_id_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 182,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_build_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 190,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_package_by_id_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 198,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_package_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 207,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_group_by_name_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 216,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_copr_chroot_safe: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 229,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_active_groups_by_user: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 231,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "ComplexLogic.get_active_groups_by_user: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 238,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_queue_sizes: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 250,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ComplexLogic.get_coprs_permissible_by_user: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 265,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "ProjectForking: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 265,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "ProjectForking: Class 'ProjectForking' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 274,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectForking.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 274,
          "column": 18,
          "event": "W0613(unused-argument)",
          "message": "ProjectForking.get: Unused argument 'copr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 278,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectForking.fork_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 307,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectForking.fork_package: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 316,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectForking.fork_build: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 332,
          "column": 4,
          "event": "W0102(dangerous-default-value)",
          "message": "ProjectForking.create_object: Dangerous default value list() (builtins.list) as argument"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 332,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectForking.create_object: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 334,
          "column": 18,
          "event": "W0612(unused-variable)",
          "message": "ProjectForking.create_object: Unused variable 'column'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 332,
          "column": 4,
          "event": "R0201(no-self-use)",
          "message": "ProjectForking.create_object: Method could be a function"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 340,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "BuildConfigLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 340,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "BuildConfigLogic: Class 'BuildConfigLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 385,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildConfigLogic.get_additional_repo_views: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 404,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildConfigLogic.generate_additional_repos: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 10,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from copr_common.enums import StatusEnum\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 11,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs import helpers\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 12,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs import models\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 13,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs import exceptions\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 14,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs.exceptions import ObjectNotFound, ActionInProgressException\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 15,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs.logic.packages_logic import PackagesLogic\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 16,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs.logic.actions_logic import ActionsLogic\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 18,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs.logic.users_logic import UsersLogic\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/complex_logic.py",
          "line": 19,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "first party import \"from coprs.models import User, Copr\" should be placed before \"from .. import db\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 459,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 43 spaces).\n                    '|'.join(allowed)))\n                    ^                                          |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 500,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 28 spaces).\n                                 req_bool))\n                                 ^                           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 508,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 17 spaces).\n                                 permission, copr.full_name))\n                |                ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 538,
          "column": 38,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                .filter(models.Copr.id==copr.id)\n                                      ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 539,
          "column": 43,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                .filter(models.CoprDir.name==dirname))\n                                           ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 544,
          "column": 43,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                .filter(models.CoprDir.name==dirname)\n                                           ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 545,
          "column": 48,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                .filter(models.CoprDir.ownername==ownername))\n                                                ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 27,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "CoprsLogic: Class 'CoprsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 41,
          "column": 25,
          "event": "C0121(singleton-comparison)",
          "message": "CoprsLogic.get_all: Comparison to False should be 'not expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 45,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_by_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 49,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.attach_build: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 56,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.attach_mock_chroots: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 65,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_multiple_by_username: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 83,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_multiple_by_group_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 101,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 107,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_by_group_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 113,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_multiple: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 130,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.set_query_order: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 133,
          "column": 36,
          "event": "W0621(redefined-outer-name)",
          "message": "CoprsLogic.set_query_order: Redefining name 'desc' from outer scope (line 10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 139,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_multiple_owned_by_username: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 144,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.filter_by_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 148,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.filter_by_user_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 153,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.filter_by_group_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 158,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.filter_without_group_projects: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 162,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.filter_without_ids: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 166,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.join_builds: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 172,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.join_mock_chroots: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 180,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_playground: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 181,
          "column": 36,
          "event": "C0121(singleton-comparison)",
          "message": "CoprsLogic.get_playground: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 184,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.set_playground: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 187,
          "column": 12,
          "event": "W0107(unnecessary-pass)",
          "message": "CoprsLogic.set_playground: Unnecessary pass statement"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 193,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_multiple_fulltext: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 196,
          "column": 25,
          "event": "C0121(singleton-comparison)",
          "message": "CoprsLogic.get_multiple_fulltext: Comparison to False should be 'not expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 217,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.add: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 217,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "CoprsLogic.add: Too many arguments (13/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 264,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.new: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 266,
          "column": 12,
          "event": "R1720(no-else-raise)",
          "message": "CoprsLogic.new: Unnecessary \"elif\" after \"raise\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 276,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.update: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 309,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.exists_for_user: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 316,
          "column": 39,
          "event": "C0121(singleton-comparison)",
          "message": "CoprsLogic.exists_for_user: Comparison to False should be 'not expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 321,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.exists_for_group: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 328,
          "column": 39,
          "event": "C0121(singleton-comparison)",
          "message": "CoprsLogic.exists_for_group: Comparison to False should be 'not expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 333,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.unfinished_blocking_actions_for: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 346,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprsLogic.get_yum_repos: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 370,
          "column": 4,
          "event": "R1710(inconsistent-return-statements)",
          "message": "CoprsLogic.raise_if_cant_delete: Either all return statements in a function should return an expression, or none of them should."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 27,
          "column": 0,
          "event": "R0904(too-many-public-methods)",
          "message": "CoprsLogic: Too many public methods (31/20)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 388,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "CoprPermissionsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 388,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "CoprPermissionsLogic: Class 'CoprPermissionsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 390,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 398,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.get_for_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 405,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.get_admins_for_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 410,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.new: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 414,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.update_permissions: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 428,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.update_permissions_by_applier: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 450,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.delete: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 454,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.validate_permission: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 472,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.set_permissions: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 490,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermissionsLogic.request_permission: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 518,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "CoprDirsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 518,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "CoprDirsLogic: Class 'CoprDirsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 520,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDirsLogic.get_or_create: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 535,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDirsLogic.get_by_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 542,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDirsLogic.get_by_ownername: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 548,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDirsLogic.delete: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 552,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDirsLogic.delete_all_by_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 558,
          "column": 69,
          "event": "W0613(unused-argument)",
          "message": "on_auto_createrepo_change: Unused argument 'initiator'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 568,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "BranchesLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 568,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "BranchesLogic: Class 'BranchesLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 570,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BranchesLogic.get_or_create: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 581,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "CoprChrootsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 581,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "CoprChrootsLogic: Class 'CoprChrootsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 583,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.get_multiple: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 590,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.mock_chroots_from_names: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 601,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.get_by_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 621,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.new: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 625,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.new_from_names: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 634,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "CoprChrootsLogic.create_chroot: Too many arguments (13/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 655,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "CoprChrootsLogic.update_chroot: Too many arguments (12/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 670,
          "column": 4,
          "event": "R0913(too-many-arguments)",
          "message": "CoprChrootsLogic._update_chroot: Too many arguments (11/10)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 701,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.update_from_names: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 733,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.remove_comps: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 755,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.filter_outdated: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 759,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChrootsLogic.filter_outdated_to_be_deleted: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 763,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "MockChrootsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 763,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "MockChrootsLogic: Class 'MockChrootsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 765,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 765,
          "column": 47,
          "event": "W0613(unused-argument)",
          "message": "MockChrootsLogic.get: Unused argument 'active_only'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 790,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.get_multiple: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 793,
          "column": 33,
          "event": "C0121(singleton-comparison)",
          "message": "MockChrootsLogic.get_multiple: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 797,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.add: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 809,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.active_names: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 813,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.active_names_with_comments: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 817,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.new: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 821,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.edit_by_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 833,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.update: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 837,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.delete_by_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 847,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.delete: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 876,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.prunerepo_finished: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 886,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChrootsLogic.chroots_prunerepo_status: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 889,
          "column": 22,
          "event": "E1133(not-an-iterable)",
          "message": "MockChrootsLogic.chroots_prunerepo_status: Non-iterable value query is used in an iterating context"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 896,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "PinnedCoprsLogic: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 896,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "PinnedCoprsLogic: Class 'PinnedCoprsLogic' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 899,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.get_all: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 903,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.get_by_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 907,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.get_by_owner: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 913,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.get_by_user_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 917,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.get_by_group_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 921,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.add: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 928,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.delete_by_owner: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/logic/coprs_logic.py",
          "line": 935,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "PinnedCoprsLogic.delete_by_copr: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 70,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n            nullable=False)\n            ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 294,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 12 spaces).\n            nullable=False, primary_key=True)\n            ^           |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 322,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 22 spaces).\n            remote_side=_CoprPublic.id,\n            ^                     |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 323,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 22 spaces).\n            foreign_keys=[_CoprPublic.forked_from_id],\n            ^                     |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 324,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 22 spaces).\n            backref=db.backref(\"all_forks\"))\n            ^                     |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 335,
          "column": 51,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n        return CoprDir.query.filter(CoprDir.copr_id==self.id).filter(CoprDir.main==True).one()\n                                                   ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 335,
          "column": 81,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n        return CoprDir.query.filter(CoprDir.copr_id==self.id).filter(CoprDir.main==True).one()\n                                                                                 ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 599,
          "column": 52,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required around comparison\n                 unique=True, postgresql_where=(main==True)),\n                                                    ^^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 766,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n                name=self.name,\n            |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 767,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong hanging indentation (remove 4 spaces).\n                copr_dir_id=self.copr.main_dir.id\n            |   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 797,
          "column": 0,
          "event": "C0301(line-too-long)",
          "message": "Line too long (136/120)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 944,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (remove 19 spaces).\n                                    else \"builder-live.log.gz\"]\n                 |                  ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1209,
          "column": 25,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required before assignment\n    distgit_branch_name  = db.Column(db.String(50),\n                         ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1214,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 25 spaces).\n            backref=db.backref(\"chroots\"))\n            ^                        |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1416,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 7 spaces).\n                                                copr_dirname,\n                                                ^      |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1417,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 7 spaces).\n                                                self.build.package.name,\n                                                ^      |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1418,
          "column": 0,
          "event": "C0330(bad-continuation)",
          "message": "Wrong continued indentation (add 7 spaces).\n                                                self.git_hash)\n                                                ^      |"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1650,
          "column": 19,
          "event": "C0326(bad-whitespace)",
          "message": "No space allowed after bracket\n            return { BackendResultEnum(\"success\"): ModuleStatusEnum(\"succeeded\"),\n                   ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1,
          "column": 0,
          "event": "C0302(too-many-lines)",
          "message": "Too many lines in module (1724/1000)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 31,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from gi.repository import Modulemd\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 34,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "CoprSearchRelatedData: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 34,
          "column": 0,
          "event": "R0205(useless-object-inheritance)",
          "message": "CoprSearchRelatedData: Class 'CoprSearchRelatedData' inherits from object, can be safely removed from bases in python3"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 35,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprSearchRelatedData.get_search_related_copr_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 35,
          "column": 4,
          "event": "R0201(no-self-use)",
          "message": "CoprSearchRelatedData.get_search_related_copr_id: Method could be a function"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 45,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "_UserPublic: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 85,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "User: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 87,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "User: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 133,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "User.user_teams: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 134,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "User.user_teams: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 140,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "User.user_groups: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 147,
          "column": 8,
          "event": "R1703(simplifiable-if-statement)",
          "message": "User.can_build_in_group: The if statement can be replaced with 'return bool(test)'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 147,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "User.can_build_in_group: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 105,
          "column": 12,
          "event": "W0201(attribute-defined-outside-init)",
          "message": "User.permissions_for_copr: Attribute '_permissions_for_copr' defined outside __init__"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 203,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "PinnedCoprs: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 226,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "_CoprPublic: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 303,
          "column": 0,
          "event": "R0902(too-many-instance-attributes)",
          "message": "Copr: Too many instance attributes (9/7)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 312,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Copr: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 327,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.forks: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 335,
          "column": 69,
          "event": "C0121(singleton-comparison)",
          "message": "Copr.main_dir: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 338,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.scm_api_auth: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 415,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.outdated_chroots: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 426,
          "column": 12,
          "event": "W0621(redefined-outer-name)",
          "message": "Copr.active_chroots_grouped: Redefining name 'os' from outer scope (line 3)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 439,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.disable_createrepo: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 447,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.devel_mode: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 463,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.is_release_arch_modified: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 470,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.full_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 474,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.repo_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 478,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.repo_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 484,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.repo_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 488,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.modules_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 491,
          "column": 4,
          "event": "W0221(arguments-differ)",
          "message": "Copr.to_dict: Parameters differ from overridden 'to_dict' method"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 491,
          "column": 22,
          "event": "W0613(unused-argument)",
          "message": "Copr.to_dict: Unused argument 'private'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 491,
          "column": 37,
          "event": "W0613(unused-argument)",
          "message": "Copr.to_dict: Unused argument 'show_builds'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 491,
          "column": 55,
          "event": "W0613(unused-argument)",
          "message": "Copr.to_dict: Unused argument 'show_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 499,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.still_forking: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 504,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.get_search_related_copr_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 508,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.enable_net: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 515,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.new_webhook_secret: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 519,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.delete_after_days: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 537,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.delete_after_msg: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 543,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Copr.admin_mails: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 516,
          "column": 8,
          "event": "W0201(attribute-defined-outside-init)",
          "message": "Copr.new_webhook_secret: Attribute 'webhook_secret' defined outside __init__"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 303,
          "column": 0,
          "event": "R0904(too-many-public-methods)",
          "message": "Copr: Too many public methods (31/20)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 567,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermission.set_permission: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 575,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprPermission.get_permission: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 587,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "CoprDir: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 599,
          "column": 48,
          "event": "C0121(singleton-comparison)",
          "message": "CoprDir: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 611,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDir.full_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 615,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDir.repo_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 619,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDir.repo_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 624,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprDir.repo_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 625,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "CoprDir.repo_id: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 646,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Package: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 661,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.validate_max_builds: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 661,
          "column": 34,
          "event": "W0613(unused-argument)",
          "message": "Package.validate_max_builds: Unused argument 'field'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 661,
          "column": 4,
          "event": "R0201(no-self-use)",
          "message": "Package.validate_max_builds: Method could be a function"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 678,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.dist_git_repo: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 682,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.source_json_dict: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 688,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.source_type_text: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 700,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.dist_git_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 706,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.dist_git_clone_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 707,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "Package.dist_git_clone_url: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 712,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.last_build: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 718,
          "column": 4,
          "event": "W0221(arguments-differ)",
          "message": "Package.to_dict: Parameters differ from overridden 'to_dict' method"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 738,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.chroot_blacklist: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 753,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.matched_chroot: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 761,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.main_pkg: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 773,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Package.chroots: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 786,
          "column": 0,
          "event": "R0902(too-many-instance-attributes)",
          "message": "Build: Too many instance attributes (9/7)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 814,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Build: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 888,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.user_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 892,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.group_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 896,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.copr_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 900,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.copr_dirname: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 904,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.copr_full_dirname: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 908,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.fail_type_text: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 912,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.repos_list: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 913,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "Build.repos_list: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 919,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.task_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 923,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.id_fixed_width: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 926,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.get_import_log_urls: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 933,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.import_log_url_distgit: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 940,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.import_log_url_backend: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 949,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.source_json_dict: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 955,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.started_on: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 959,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.min_started_on: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 962,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "Build.min_started_on: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 968,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.ended_on: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 972,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.max_ended_on: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 980,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.chroots_started_on: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 984,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.chroots_ended_on: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 988,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.source_type_text: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 992,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.source_metadata: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1002,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.chroot_states: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1022,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.chroots_dict_by_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1069,
          "column": 11,
          "event": "C0121(singleton-comparison)",
          "message": "Build.state: Comparison to None should be 'expr is not None'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1104,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.blocked: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1117,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.package_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1120,
          "column": 8,
          "event": "W0702(bare-except)",
          "message": "Build.package_name: No exception type(s) specified"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1123,
          "column": 4,
          "event": "W0221(arguments-differ)",
          "message": "Build.to_dict: Parameters differ from overridden 'to_dict' method"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1173,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.resubmitted_from: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1177,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Build.source_is_uploaded: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 786,
          "column": 0,
          "event": "R0904(too-many-public-methods)",
          "message": "Build: Too many public methods (37/20)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1199,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "MockChroot: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1227,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "MockChroot.latest_fedora_branched_chroot: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1229,
          "column": 24,
          "event": "C0121(singleton-comparison)",
          "message": "MockChroot.latest_fedora_branched_chroot: Comparison to True should be just 'expr'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1260,
          "column": 8,
          "event": "E1101(no-member)",
          "message": "MockChroot.serializable_attributes: Instance of 'map' has no 'extend' member"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1295,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.update_comps: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1303,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.buildroot_pkgs_list: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1307,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.repos_list: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1311,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.comps: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1311,
          "column": 4,
          "event": "R1710(inconsistent-return-statements)",
          "message": "CoprChroot.comps: Either all return statements in a function should return an expression, or none of them should."
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1316,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.comps_len: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1317,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "CoprChroot.comps_len: Unnecessary \"else\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1323,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1327,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.is_active: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1331,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.delete_after_days: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1339,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "CoprChroot.module_toggle_array: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1348,
          "column": 4,
          "event": "W0221(arguments-differ)",
          "message": "CoprChroot.to_dict: Parameters differ from overridden 'to_dict' method"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1399,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChroot.finished: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1403,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChroot.task_id: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1407,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChroot.dist_git_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1422,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChroot.result_dir_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1429,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "BuildChroot.live_log_link: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1443,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "LegalFlag: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1444,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "LegalFlag: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1478,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Action: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1507,
          "column": 8,
          "event": "R1705(no-else-return)",
          "message": "Action.__unicode__: Unnecessary \"elif\" after \"return\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1515,
          "column": 4,
          "event": "W0221(arguments-differ)",
          "message": "Action.to_dict: Parameters differ from overridden 'to_dict' method"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1515,
          "column": 0,
          "event": "W0613(unused-argument)",
          "message": "Action.to_dict: Unused argument 'kwargs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1529,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Action.default_priority: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1570,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Group: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1577,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Group.at_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1587,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "Batch: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1588,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Batch: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1593,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Batch.finished: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1597,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "Module: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1598,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "Module: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1623,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.yaml: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1627,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.modulemd: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1633,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.nsv: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1637,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.full_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1641,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.action: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1668,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.rpm_filter: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1672,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.rpm_api: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1676,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "Module.profiles: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1680,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "BuildsStatistics: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1680,
          "column": 0,
          "event": "R0903(too-few-public-methods)",
          "message": "BuildsStatistics: Too few public methods (0/1)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1686,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "ActionsStatistics: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1686,
          "column": 0,
          "event": "R0903(too-few-public-methods)",
          "message": "ActionsStatistics: Too few public methods (0/1)"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1698,
          "column": 4,
          "event": "C0103(invalid-name)",
          "message": "DistGitInstance: Class attribute name \"id\" doesn't conform to '([A-Za-z_][A-Za-z0-9_]{2,42}|(__.*__))$' pattern"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1712,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "DistGitInstance.package_clone_url: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1718,
          "column": 0,
          "event": "C0116(missing-function-docstring)",
          "message": "insert_fedora_distgit: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1718,
          "column": 0,
          "event": "W0613(unused-argument)",
          "message": "insert_fedora_distgit: Unused argument 'args'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 1718,
          "column": 0,
          "event": "W0613(unused-argument)",
          "message": "insert_fedora_distgit: Unused argument 'kwargs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 15,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import zlib\" should be placed before \"from sqlalchemy import outerjoin\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 25,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import itertools\" should be placed before \"from sqlalchemy import outerjoin\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 26,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"import operator\" should be placed before \"from sqlalchemy import outerjoin\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 29,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"import gi\" should be placed before \"from copr_common.enums import ActionTypeEnum, BackendResultEnum, FailTypeEnum, ModuleStatusEnum, StatusEnum, DefaultActionPriorityEnum\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/models.py",
          "line": 31,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "third party import \"from gi.repository import Modulemd\" should be placed before \"from copr_common.enums import ActionTypeEnum, BackendResultEnum, FailTypeEnum, ModuleStatusEnum, StatusEnum, DefaultActionPriorityEnum\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 7,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"import flask\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 8,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from flask import url_for, make_response\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 9,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from flask_restful import Resource\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 11,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from sqlalchemy.exc import IntegrityError\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 13,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ... import db\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 14,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ...logic.coprs_logic import MockChrootsLogic, CoprChrootsLogic\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 15,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ...exceptions import InsufficientRightsException, MalformedArgumentException\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 17,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ..exceptions import AccessForbidden, MalformedRequest, ObjectAlreadyExists, ObjectNotFoundError\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 19,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ..common import rest_api_auth_required, render_copr_chroot, get_project_safe\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 20,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ..schemas import CoprChrootSchema, CoprChrootCreateSchema\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 21,
          "column": 0,
          "event": "C0413(wrong-import-position)",
          "message": "Import \"from ..util import get_one_safe, mm_deserialize\" should be placed at the top of the module"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 24,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "ProjectChrootListR: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 27,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectChrootListR.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 42,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectChrootListR.post: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 70,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "ProjectChrootR: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 80,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectChrootR.get: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 88,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectChrootR.delete: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/coprs/rest_api/resources/project_chroot.py",
          "line": 103,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "ProjectChrootR.put: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 41,
          "column": 34,
          "event": "C0326(bad-whitespace)",
          "message": "Exactly one space required after comma\n            self, f_users, f_coprs,f_db, f_users_api,\n                                  ^"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 308,
          "column": 0,
          "event": "C0305(trailing-newlines)",
          "message": "Trailing newlines"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 8,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "TestProjectChrootResource: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 9,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_remove_chroot: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 9,
          "column": 33,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 9,
          "column": 42,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 9,
          "column": 51,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 9,
          "column": 57,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 10,
          "column": 27,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot: Unused argument 'f_mock_chroots_many'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 40,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 41,
          "column": 18,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 41,
          "column": 27,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 41,
          "column": 35,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 41,
          "column": 41,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 42,
          "column": 12,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Unused argument 'f_mock_chroots_many'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 42,
          "column": 33,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_remove_chroot_other_user: Unused argument 'f_build_few_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 65,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_put_correct: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 65,
          "column": 31,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_correct: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 65,
          "column": 40,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_correct: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 65,
          "column": 49,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_correct: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 65,
          "column": 55,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_correct: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 65,
          "column": 68,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_correct: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 109,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_put_erasing: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 109,
          "column": 31,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_erasing: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 109,
          "column": 40,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_erasing: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 109,
          "column": 49,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_erasing: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 109,
          "column": 55,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_erasing: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 109,
          "column": 68,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_erasing: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 134,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_put_wrong_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 134,
          "column": 34,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_name: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 134,
          "column": 43,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_name: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 134,
          "column": 52,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_name: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 134,
          "column": 58,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_name: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 134,
          "column": 71,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_name: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 151,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_put_wrong_user: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 151,
          "column": 34,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_user: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 151,
          "column": 43,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_user: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 151,
          "column": 52,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_user: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 151,
          "column": 58,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_user: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 151,
          "column": 71,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_put_wrong_user: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 175,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_create_chroot: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 175,
          "column": 33,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 175,
          "column": 42,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 175,
          "column": 51,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 175,
          "column": 57,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 175,
          "column": 70,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 212,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_create_chroot_build_no_buildchroot: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 212,
          "column": 54,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_build_no_buildchroot: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 212,
          "column": 63,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_build_no_buildchroot: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 212,
          "column": 72,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_build_no_buildchroot: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 212,
          "column": 78,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_build_no_buildchroot: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 212,
          "column": 91,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_build_no_buildchroot: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 229,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_create_chroot_missing_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 229,
          "column": 46,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_missing_name: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 229,
          "column": 55,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_missing_name: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 229,
          "column": 64,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_missing_name: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 229,
          "column": 70,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_missing_name: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 229,
          "column": 83,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_missing_name: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 251,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_create_chroot_non_existing_name: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 252,
          "column": 18,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_non_existing_name: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 252,
          "column": 27,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_non_existing_name: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 252,
          "column": 36,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_non_existing_name: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 252,
          "column": 42,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_non_existing_name: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 252,
          "column": 55,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_chroot_non_existing_name: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 280,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestProjectChrootResource.test_create_conflict_existing: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 281,
          "column": 18,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_conflict_existing: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 281,
          "column": 27,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_conflict_existing: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 281,
          "column": 36,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_conflict_existing: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 281,
          "column": 42,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_conflict_existing: Unused argument 'f_users_api'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_api/test_project_chroot_r.py",
          "line": 281,
          "column": 55,
          "event": "W0613(unused-argument)",
          "message": "TestProjectChrootResource.test_create_conflict_existing: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "C0114(missing-module-docstring)",
          "message": "Missing module docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 9,
          "column": 0,
          "event": "C0115(missing-class-docstring)",
          "message": "TestNotifyOutdatedChroots: Missing class docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 11,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 11,
          "column": 36,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 11,
          "column": 45,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 11,
          "column": 54,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 11,
          "column": 70,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 18,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_permissions: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 18,
          "column": 48,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_permissions: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 18,
          "column": 57,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_permissions: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 18,
          "column": 66,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_permissions: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 18,
          "column": 82,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_permissions: Unused argument 'f_copr_permissions'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 18,
          "column": 102,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_permissions: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 26,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_email: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 26,
          "column": 42,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_email: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 26,
          "column": 51,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_email: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 26,
          "column": 60,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_email: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 26,
          "column": 76,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_user_chroots_map_email: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 32,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestNotifyOutdatedChroots.test_filter_chroots: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 32,
          "column": 34,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_filter_chroots: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 32,
          "column": 43,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_filter_chroots: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 32,
          "column": 52,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_filter_chroots: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 32,
          "column": 68,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_filter_chroots: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 51,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 51,
          "column": 54,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots: Unused argument 'dev_instance_warning'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 51,
          "column": 76,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 51,
          "column": 85,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 51,
          "column": 94,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 51,
          "column": 110,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 87,
          "column": 4,
          "event": "C0116(missing-function-docstring)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots_email_filter: Missing function or method docstring"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 87,
          "column": 67,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots_email_filter: Unused argument 'dev_instance_warning'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 88,
          "column": 50,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots_email_filter: Unused argument 'f_users'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 88,
          "column": 59,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots_email_filter: Unused argument 'f_coprs'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 88,
          "column": 68,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots_email_filter: Unused argument 'f_mock_chroots'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 88,
          "column": 84,
          "event": "W0613(unused-argument)",
          "message": "TestNotifyOutdatedChroots.test_notify_outdated_chroots_email_filter: Unused argument 'f_db'"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 7,
          "column": 0,
          "event": "C0411(wrong-import-order)",
          "message": "standard import \"from commands.notify_outdated_chroots import get_user_chroots_map, filter_chroots, notify_outdated_chroots_function\" should be placed before \"from tests.coprs_test_case import CoprsTestCase\""
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==465202bfb9ce_update_db_functions:18\n==d230af5e05d8_drop_unused_pg_only_db_functions:25\nCREATE OR REPLACE FUNCTION status_to_order (x integer)\nRETURNS integer AS $$ BEGIN\n        RETURN CASE WHEN x = 3 THEN 1\n                    WHEN x = 6 THEN 2\n                    WHEN x = 7 THEN 3\n                    WHEN x = 4 THEN 4\n                    WHEN x = 0 THEN 5\n                    WHEN x = 1 THEN 6\n                    WHEN x = 5 THEN 7\n                    WHEN x = 2 THEN 8\n                    WHEN x = 8 THEN 9\n                    WHEN x = 9 THEN 10\n               ELSE x\n        END; END;\n    $$ LANGUAGE plpgsql;\n\nCREATE OR REPLACE FUNCTION order_to_status (x integer)\nRETURNS integer AS $$ BEGIN\n        RETURN CASE WHEN x = 1 THEN 3\n                    WHEN x = 2 THEN 6\n                    WHEN x = 3 THEN 7\n                    WHEN x = 4 THEN 4\n                    WHEN x = 5 THEN 0\n                    WHEN x = 6 THEN 1\n                    WHEN x = 7 THEN 5\n                    WHEN x = 8 THEN 2\n                    WHEN x = 9 THEN 8\n                    WHEN x = 10 THEN 9\n               ELSE x\n        END; END;\n    $$ LANGUAGE plpgsql;\n    \"\"\"\n    op.execute(sa.text(query_functions))"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==465202bfb9ce_update_db_functions:65\n==d230af5e05d8_drop_unused_pg_only_db_functions:37\n               ELSE x\n        END; END;\n    $$ LANGUAGE plpgsql;\n\nCREATE OR REPLACE FUNCTION order_to_status (x integer)\nRETURNS integer AS $$ BEGIN\n        RETURN CASE WHEN x = 1 THEN 3\n                    WHEN x = 2 THEN 6\n                    WHEN x = 3 THEN 7\n                    WHEN x = 4 THEN 4\n                    WHEN x = 5 THEN 0\n                    WHEN x = 6 THEN 1\n                    WHEN x = 7 THEN 5\n                    WHEN x = 8 THEN 2"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==512ff2b9eb6c_unify_scm_source_types_for_packages:66\n==a8654abcec65_unify_scm_source_types:66\n        new_source_dict = {\n            'type': 'git',\n            'clone_url': source_dict.get('clone_url') or '',\n            'committish': source_dict.get('branch') or '',\n            'subdirectory': '',\n            'spec': '',\n            'srpm_build_method': 'rpkg',\n        }\n        new_source_json = json.dumps(new_source_dict)\n        new_source_type = 8\n        session.execute("
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==512ff2b9eb6c_unify_scm_source_types_for_packages:46\n==a8654abcec65_unify_scm_source_types:46\n        new_source_dict = {\n            'type': source_dict.get('scm_type') or 'git',\n            'clone_url': source_dict.get('scm_url') or '',\n            'committish': source_dict.get('scm_branch') or '',\n            'subdirectory': source_dict.get('scm_subdir') or '',\n            'spec': source_dict.get('spec') or '',\n            'srpm_build_method': 'rpkg',\n        }\n        new_source_json = json.dumps(new_source_dict)\n        new_source_type = 8\n        session.execute("
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==512ff2b9eb6c_unify_scm_source_types_for_packages:26\n==a8654abcec65_unify_scm_source_types:26\n        new_source_dict = {\n            'type': 'git',\n            'clone_url': source_dict.get('git_url') or '',\n            'committish': source_dict.get('git_branch') or '',\n            'subdirectory': source_dict.get('git_dir') or '',\n            'spec': '',\n            'srpm_build_method': 'tito_test' if source_dict.get('tito_test') else 'tito',\n        }\n        new_source_json = json.dumps(new_source_dict)\n        new_source_type = 8\n        session.execute("
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==465202bfb9ce_update_db_functions:55\n==d230af5e05d8_drop_unused_pg_only_db_functions:25\nCREATE OR REPLACE FUNCTION status_to_order (x integer)\nRETURNS integer AS $$ BEGIN\n        RETURN CASE WHEN x = 3 THEN 1\n                    WHEN x = 6 THEN 2\n                    WHEN x = 7 THEN 3\n                    WHEN x = 4 THEN 4\n                    WHEN x = 0 THEN 5\n                    WHEN x = 1 THEN 6\n                    WHEN x = 5 THEN 7\n                    WHEN x = 2 THEN 8"
        }
      ]
    },
    {
      "checker": "PYLINT_WARNING",
      "events": [
        {
          "file_name": "coprs_frontend/tests/test_commands/test_notify_outdated_chroots.py",
          "line": 1,
          "column": 0,
          "event": "R0801(duplicate-code)",
          "message": "Similar lines in 2 files\n==512ff2b9eb6c_unify_scm_source_types_for_packages:12\n==a8654abcec65_unify_scm_source_types:12\nfrom alembic import op\nimport sqlalchemy as sa\nimport json\n\n\ndef upgrade():\n    session = sa.orm.sessionmaker(bind=op.get_bind())()\n"
        }
      ]
    }
  ]
}
